name: Python CI with Pytest and Selenium

on:
  push:
    branches:
      - '*'  # Trigger on any push to any branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the 'main' branch

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      selenium:
        image: selenium/standalone-chrome:latest
        options: >-
          --shm-size=32g
        ports:
          - 4444:4444

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sqlalchemy pytest fastapi selenium chromedriver_autoinstaller httpx

      # Install frontend dependencies
    - name: Install frontend dependencies
      run: |
        cd nextjs-fastapi/frontend
        npm install  # Install Node.js dependencies for frontend

    # Run unit tests (non-Selenium)
    - name: Run unit tests
      run: |
        set PYTHONPATH=nextjs-fastapi && pytest nextjs-fastapi/tests/unit_tests

    # Run integration tests
    - name: Run integration tests
      run: |
        set PYTHONPATH=nextjs-fastapi && pytest nextjs-fastapi/tests/integration_tests

  # Run database table creation script
    - name: Run table creation script
      run: |
        cd nextjs-fastapi/db/scripts
        python TableCreation.py
        echo "Database tables created"

    # Run database population script
    - name: Run database population script
      run: |
        cd nextjs-fastapi/db/scripts
        python DatabasePopulate.py
        echo "Database populated with test data"


      # Start the backend FastAPI service (run in background)
    - name: Start FastAPI backend
      run: |
        cd nextjs-fastapi/backend
        nohup uvicorn main:app --host 0.0.0.0 --port 8000 --reload &  # Starts FastAPI in the background
        echo "Backend is running"

    # Start the frontend Next.js service (run in background)
    - name: Start Next.js frontend
      run: |
        cd nextjs-fastapi/frontend
        nohup npm run dev &  # Starts Next.js frontend in the background
        echo "Frontend is running"

    # Wait for services to start
    - name: Wait for services to start
      run: |
        echo "Waiting for services to start..."
        sleep 20  # Adjust this value based on how long the services need to start


      # Run Selenium tests
    - name: Run Selenium tests
      run: |
        set PYTHONPATH=nextjs-fastapi && pytest nextjs-fastapi/tests/feature_tests/

    # Clean up (optional) - You can skip if you don't need to stop the services
    - name: Clean up services
      run: |
        kill $(ps aux | grep 'uvicorn' | awk '{print $1}')
        kill $(ps aux | grep 'npm run dev' | awk '{print $1}')
        echo "Services stopped"